# -*- coding: utf-8 -*-
#   Copyright 99Cloud, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: congestion_grpc.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf.internal import builder as _builder
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x15\x63ongestion_grpc.proto\x12\x0f\x63ongestion_grpc"!\n\x11\x43ongestionRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t""\n\x12\x43ongestionResponse\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t2i\n\x0e\x43ongestionGrpc\x12W\n\ncongestion\x12".congestion_grpc.CongestionRequest\x1a#.congestion_grpc.CongestionResponse"\x00\x62\x06proto3'  # noqa
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "congestion_grpc_pb2", globals()
)
if _descriptor._USE_C_DESCRIPTORS == False:  # noqa
    DESCRIPTOR._options = None
    _CONGESTIONREQUEST._serialized_start = 42  # noqa
    _CONGESTIONREQUEST._serialized_end = 75  # noqa
    _CONGESTIONRESPONSE._serialized_start = 77  # noqa
    _CONGESTIONRESPONSE._serialized_end = 111  # noqa
    _CONGESTIONGRPC._serialized_start = 113  # noqa
    _CONGESTIONGRPC._serialized_end = 218  # noqa
# @@protoc_insertion_point(module_scope)
