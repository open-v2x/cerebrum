# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!  # noqa
"""Client and server classes corresponding to protobuf-defined services."""
import grpc  # type: ignore

from . import reverse_driving_grpc_pb2 as reverse__driving__grpc__pb2


class ReverseDrivingGrpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):  # noqa
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.reverse_driving = channel.unary_unary(
            "/reverse_driving_grpc.ReverseDrivingGrpc/reverse_driving",
            request_serializer=reverse__driving__grpc__pb2.ReverseDrivingRequest.SerializeToString,  # noqa
            response_deserializer=reverse__driving__grpc__pb2.ReverseDrivingResponse.FromString,  # noqa
        )


class ReverseDrivingGrpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def reverse_driving(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ReverseDrivingGrpcServicer_to_server(servicer, server):
    """Add."""
    rpc_method_handlers = {  # noqa
        "reverse_driving": grpc.unary_unary_rpc_method_handler(  # noqa
            servicer.reverse_driving,  # noqa
            request_deserializer=reverse__driving__grpc__pb2.ReverseDrivingRequest.FromString,  # noqa
            response_serializer=reverse__driving__grpc__pb2.ReverseDrivingResponse.SerializeToString,  # noqa
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "reverse_driving_grpc.ReverseDrivingGrpc", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ReverseDrivingGrpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def reverse_driving(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        """Reverse driving."""
        return grpc.experimental.unary_unary(
            request,
            target,
            "/reverse_driving_grpc.ReverseDrivingGrpc/reverse_driving",
            reverse__driving__grpc__pb2.ReverseDrivingRequest.SerializeToString,  # noqa
            reverse__driving__grpc__pb2.ReverseDrivingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
