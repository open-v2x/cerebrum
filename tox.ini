[tox]
minversion = 1.0.0
skipsdist = True
envlist = py3,pep8,bandit,typecheck,docstyle
ignore_basepython_conflict = True

[testenv:py3]
basepython = python3
allowlist_externals =
    rm
    /usr/bin/find
setenv = VIRTUAL_ENV={envdir}
         PYTHONWARNINGS=default::DeprecationWarning
         db_server=sqlite
usedevelop = True

deps = -r{toxinidir}/requirements/algo.txt
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

commands =
  python config/default.py
  /usr/bin/find . -type f -name "*.py[co]" -delete
  ; stestr run {posargs}
  pytest tests

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:pep8]
deps = -r{toxinidir}/requirements/pep8.txt
commands =
    black -l 79 .
    flake8 {posargs} transform_driver pre_process_ai_algo
    flake8 {posargs} scenario_algo post_process_algo tests
    flake8 {posargs} overspeed_warning_service
    flake8 {posargs} reverse_driving_service

[testenv:bandit]
deps = -r{toxinidir}/requirements/bandit.txt
commands = bandit -r pre_process_ai_algo scenario_algo -n5 -x tests/* -ll

[testenv:venv]
commands = {posargs}

[flake8]
filename = *.py,app.wsgi
exclude = .git,.venv,.tox,dist,doc,*egg,build,.ropeproject,releasenotes
extend-ignore = E203

[flake8:local-plugins]
extension =
    C310 = checks:CheckLoggingFormatArgs
    C311 = checks:validate_assertIsNone
    C312 = checks:validate_assertTrue
    C313 = checks:no_translate_logs
    C314 = checks:CheckForStrUnicodeExc
    C315 = checks:CheckForTransAdd
    C317 = checks:check_oslo_namespace_imports
    C318 = checks:dict_constructor_with_list_copy
    C319 = checks:no_xrange
    C320 = checks:no_log_warn_check
    C321 = checks:check_explicit_underscore_import
paths = ./hacking

[pytest]
addopts =
  --strict-markers -vvl
  --cov=pre_process_ai_algo scenario_algo
  --cov-report=term-missing

[testenv:lower-constraints]
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements/algo.txt
  -r{toxinidir}/requirements.txt

[testenv:typecheck]
deps = -r{toxinidir}/requirements/typecheck.txt
       -r{toxinidir}/requirements/algo.txt
       -r{toxinidir}/requirements.txt
commands =
     mypy -p common
     mypy -p transform_driver
     mypy -p pre_process_ai_algo
     mypy -p scenario_algo
     mypy -p post_process_algo
     mypy -p tests
     mypy -p overspeed_warning_service
     mypy -p reverse_driving_service

[testenv:docstyle]
deps = -r{toxinidir}/requirements/docstyle.txt
commands =
     pydocstyle common transform_driver pre_process_ai_algo
     pydocstyle scenario_algo post_process_algo tests
     pydocstyle overspeed_warning_service
     pydocstyle reverse_driving_service
