kind: pipeline
type: exec
name: push-build

clone:
  depth: 5

platform:
  os: linux
  arch: amd64

node:
  node: ci-buildx-2

steps:
  - name: build-image
    environment:
      DOCKER_USER:
        from_secret: DOCKER_USERNAME
      DOCKER_PASS:
        from_secret: DOCKER_PASSWORD
      DOCKER_REGISTRY: docker.io
      DOCKER_ORG: openv2x
      DOCKER_TAG: albany
    commands:
      - env
      - mkdir -pv $HOMEPATH/.docker/buildx/instances
      - cp /root/.docker/buildx/instances/cicd $HOMEPATH/.docker/buildx/instances/cicd
      - docker buildx ls
      - docker buildx use cicd
      - echo -n $DOCKER_PASS | docker login $DOCKER_REGISTRY --username $DOCKER_USER --password-stdin
      - docker buildx build -f Dockerfile --build-arg BRANCH=${DRONE_BRANCH} --build-arg REPO_URL=${DRONE_REPO} --build-arg COMMIT_REF=${DRONE_COMMIT_SHA} -t $DOCKER_REGISTRY/$DOCKER_ORG/cerebrum:$DOCKER_TAG --tag $DOCKER_REGISTRY/$DOCKER_ORG/cerebrum:$DOCKER_TAG-${DRONE_COMMIT_SHA:0:6} --platform=linux/arm64,linux/amd64 . --push
  - name: clean
    environment:
      DOCKER_REGISTRY: docker.io
    commands:
      - docker logout $DOCKER_REGISTRY || true
    when:
      status:
        - success
        - failure
  - name: predeploy
    commands:
      - cp -rf /root/.ssh ~/
  - name: deploy-to-aliyun
    commands:
      - ssh v2x-release "sh install.sh 139.196.13.9"
  - name: email on success
    commands:
      - bash -x v2x-email-success.sh ${DRONE_COMMIT} ${DRONE_COMMIT_BRANCH} "${DRONE_COMMIT_AUTHOR_NAME}" ${DRONE_REPO_OWNER} ${DRONE_REPO_NAME} ${DRONE_COMMIT_AUTHOR_EMAIL} ${DRONE_BUILD_NUMBER} ${DRONE_BUILD_STARTED}
    when:
      status:
      - success
  - name: email on failure
    commands:
      - bash -x v2x-email-failure.sh ${DRONE_COMMIT} ${DRONE_COMMIT_BRANCH} "${DRONE_COMMIT_AUTHOR_NAME}" ${DRONE_REPO_OWNER} ${DRONE_REPO_NAME} ${DRONE_COMMIT_AUTHOR_EMAIL} ${DRONE_BUILD_NUMBER} ${DRONE_BUILD_STARTED}
    when:
      status:
      - failure
trigger:
  event:
    - push
  branch:
    - albany
